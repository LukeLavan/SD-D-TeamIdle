{"version":3,"sources":["PersistentState.tsx","constants/constants.tsx","components/Button/Button.tsx","components/App/App.tsx","index.tsx"],"names":["usePersistentState","key","defaultValue","useState","PersistentValue","window","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","variableDefaults","staticConstants","calcButtonClass","color","size","Button","props","className","disabled","onClick","children","App","honey","setHoney","nectar","setNectar","bees","setBees","royalJelly","setRoyalJelly","honeycomb","setHoneycomb","costOfNextBeeHoney","setCostOfNextBeeHoney","costOfNextBeeRoyalJelly","setCostOfNextBeeRoyalJelly","canBuyNextBee","setCanBuyNextBee","canBuyHoneycomb","setCanBuyHoneycomb","canRefineNectar","setCanRefineNectar","processTick","previousNectar","previousRoyalJelly","timer","setInterval","clearInterval","previousHoney","previousBees","toFixed","previousHoneycomb","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a665be93.chunk.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { useState, useEffect } from 'react';\n\n/** A wrapper for the useState React hook that checks window.localStorage for a stored value first.\n * @param key The key to check window.localStorage for any stored value\n * @param defaultValue The value to default to if no stored value is found (identical to the normal argument of useState)\n * @returns the same type that useState returns: an array containing the reference to the variable and its mutator function\n */\nfunction usePersistentState<DefaultValueType>(\n  key: string,\n  defaultValue: DefaultValueType\n): [DefaultValueType, React.Dispatch<React.SetStateAction<DefaultValueType>>] {\n  // attempt to grab value from localStorage\n  const [value, setValue] = useState(() => {\n    const PersistentValue = window.localStorage.getItem(key); // TODO: throttle calls?\n    return PersistentValue !== null\n      ? JSON.parse(PersistentValue)\n      : defaultValue;\n  });\n  // ensure that local storage is updated to reflect any changes\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n\nexport { usePersistentState };\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst variableDefaults = {\n  honey: 0,\n  bees: 0,\n  costOfNextBeeHoney: 1,\n  costOfNextBeeRoyalJelly: 0,\n  nectar: 0,\n  royalJelly: 0,\n  honeycomb: 0\n};\n\nconst staticConstants = {\n  NECTAR_BY_BEE: 3,\n  NECTAR_TO_HONEY_COST: 5,\n  HONEY_TO_HONEYCOMB_COST: 5\n};\n\nexport { variableDefaults, staticConstants };\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport './Button.css';\n\ninterface Props {\n  color?: string;\n  size?: string;\n  children: string;\n  onClick: () => void;\n  disabled?: boolean;\n}\n\nconst calcButtonClass = (color = 'purple', size = 'medium') => {\n  return color + ' ' + size;\n};\n\nfunction Button(props: Props): JSX.Element {\n  return (\n    <div className=\"Button\">\n      <button\n        className={calcButtonClass(props.color, props.size)}\n        disabled={props.disabled}\n        onClick={props.onClick}\n      >\n        {props.children}\n      </button>\n    </div>\n  );\n}\n\nexport default Button;\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport { usePersistentState } from '../../PersistentState';\nimport { useState, useEffect } from 'react';\nimport { variableDefaults, staticConstants } from '../../constants/constants';\n\nimport Button from '../Button/Button';\n\nimport './App.css';\n\nfunction App(): JSX.Element {\n  // persistent variables\n  const [honey, setHoney] = usePersistentState('honey', variableDefaults.honey);\n  const [nectar, setNectar] = usePersistentState(\n    'nectar',\n    variableDefaults.nectar\n  );\n  const [bees, setBees] = usePersistentState('bees', variableDefaults.bees);\n  const [royalJelly, setRoyalJelly] = usePersistentState(\n    'royalJelly',\n    variableDefaults.royalJelly\n  );\n  const [honeycomb, setHoneycomb] = usePersistentState(\n    'honeycomb',\n    variableDefaults.honeycomb\n  );\n\n  // non-persistent varaibles (can be recalculated on page load)\n  const [costOfNextBeeHoney, setCostOfNextBeeHoney] = useState(\n    variableDefaults.costOfNextBeeHoney\n  );\n  const [costOfNextBeeRoyalJelly, setCostOfNextBeeRoyalJelly] = useState(\n    variableDefaults.costOfNextBeeRoyalJelly\n  );\n  const [canBuyNextBee, setCanBuyNextBee] = useState(false);\n  const [canBuyHoneycomb, setCanBuyHoneycomb] = useState(false);\n  const [canRefineNectar, setCanRefineNectar] = useState(false);\n\n  // mutators\n  const gatherNectar = () => {\n    setNectar(\n      (previousNectar) => previousNectar + bees * staticConstants.NECTAR_BY_BEE\n    );\n  };\n\n  const gatherRoyalJelly = () => {\n    setRoyalJelly((previousRoyalJelly) => previousRoyalJelly + 0.27 * bees);\n  };\n\n  const incrementNectarClicked = () => {\n    setNectar((previousNectar) => previousNectar + 1);\n  };\n\n  const incrementHoney = () => {\n    setHoney((previousHoney) => previousHoney + 1);\n  };\n\n  const buyHoneycomb = () => {\n    if (canBuyHoneycomb) {\n      setHoneycomb((previousHoneycomb) => previousHoneycomb + 1);\n      setHoney(\n        (previousHoney) =>\n          previousHoney - staticConstants.HONEY_TO_HONEYCOMB_COST\n      );\n    }\n  };\n\n  const buyNextBee = () => {\n    if (canBuyNextBee) {\n      setBees((previousBees) => previousBees + 1);\n      setHoney((previousHoney) => previousHoney - costOfNextBeeHoney);\n      setRoyalJelly(\n        (previousRoyalJelly) => previousRoyalJelly - costOfNextBeeRoyalJelly\n      );\n    }\n  };\n\n  // calculate new bee cost when bee count updates\n  const calcCostOfNextBee = () => {\n    setCostOfNextBeeHoney((bees + 1) ** 2);\n    setCostOfNextBeeRoyalJelly(1.3 ** bees - 1);\n  };\n  useEffect(() => {\n    calcCostOfNextBee();\n  }, [bees]);\n\n  const refineNectar = () => {\n    if (canRefineNectar) {\n      setNectar(\n        (previousNectar) =>\n          previousNectar - staticConstants.NECTAR_TO_HONEY_COST\n      );\n      incrementHoney();\n    }\n  };\n  // re-evaluate if we can refine nectar to honey when relevant vars change\n  const calcCanRefineNectar = () => {\n    return nectar >= staticConstants.NECTAR_TO_HONEY_COST;\n  };\n  useEffect(() => {\n    setCanRefineNectar(calcCanRefineNectar());\n  }, [honey, nectar]);\n\n  // re-evaluate if we can buy next bee when relevant vars change\n  const calcCanBuyNextBee = () => {\n    return honey >= costOfNextBeeHoney && royalJelly >= costOfNextBeeRoyalJelly;\n  };\n  useEffect(() => {\n    setCanBuyNextBee(calcCanBuyNextBee());\n  }, [honey, bees, royalJelly]);\n\n  // re-evaluate if we can buy honeycomb when relevant vars change\n  const calcCanBuyHoneycomb = () => {\n    return honey >= staticConstants.HONEY_TO_HONEYCOMB_COST;\n  };\n  useEffect(() => {\n    setCanBuyHoneycomb(calcCanBuyHoneycomb());\n  }, [honey]);\n\n  // handle the logic for one tick\n  const processTick = () => {\n    gatherNectar();\n    gatherRoyalJelly();\n  };\n\n  // process a tick every 1 second\n  useEffect(() => {\n    const timer = setInterval(processTick, 1000);\n    return () => clearInterval(timer);\n  }, [bees]); // TODO: come up with a better way to do this\n\n  // reset the state and clear local storage\n  const reset = () => {\n    setHoney(variableDefaults.honey);\n    setBees(variableDefaults.bees);\n    setNectar(variableDefaults.nectar);\n    setRoyalJelly(variableDefaults.royalJelly);\n    setHoneycomb(variableDefaults.honeycomb);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>bee game</h1>\n      <div className=\"row\">\n        <div className=\"column left\">\n          nectar: {nectar} <br />\n          <Button onClick={incrementNectarClicked} color=\"yellow\">\n            buzz buzz buzz\n          </Button>\n          <br />\n          <br />\n          honey: {honey} <br />\n          <Button disabled={!canRefineNectar} onClick={refineNectar}>\n            refine that nectar!\n          </Button>\n          cost of honey: {staticConstants.NECTAR_TO_HONEY_COST} nectar <br />\n        </div>\n        <div className=\"column middle\">\n          bees: {bees} <br />\n          <Button disabled={!canBuyNextBee} onClick={buyNextBee}>\n            gain a bee!\n          </Button>\n          cost of next bee: {costOfNextBeeHoney} honey,{' '}\n          {costOfNextBeeRoyalJelly.toFixed(2)} royal jelly\n          <br /> <br /> <br />\n          royal jelly: {royalJelly.toFixed(2)}\n        </div>\n        <div className=\"column right\">\n          honeycombs: {honeycomb} <br />\n          <Button\n            disabled={!canBuyHoneycomb}\n            onClick={buyHoneycomb}\n            color=\"yellow\"\n          >\n            make some honeycombs!\n          </Button>\n          cost of honeycombs: {staticConstants.HONEY_TO_HONEYCOMB_COST} honey\n          <br />\n        </div>\n      </div>\n      <br />\n      <div className=\"row\">\n        <div className=\"column left\"></div>\n        <div className=\"column middle\">\n          <Button onClick={reset} color={'red'} size={'small'}>\n            reset\n          </Button>\n        </div>\n        <div className=\"column right\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}